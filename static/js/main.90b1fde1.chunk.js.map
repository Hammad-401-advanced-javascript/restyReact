{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/form.js","components/results/results.js","app.js","index.js"],"names":["Header","React","Component","Footer","Form","props","handleSubmit","e","a","preventDefault","fetch","state","url","raw","json","results","console","log","headers","count","Count","handler","Object","keys","length","handleChangeURL","target","value","setState","handleChangeMethod","method","id","request","onSubmit","this","name","type","onChange","className","onClick","Results","JSON","stringify","App","handleForm","Fragment","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0NAYeA,G,6KARX,OACE,gCACE,0C,GAJaC,IAAMC,YCMZC,E,uKAJX,OAAO,8D,GAFUF,IAAMC,W,uBCsFZE,G,wDAlFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,aAZmB,uCAYJ,WAAOC,GAAP,uBAAAC,EAAA,6DAEbD,EAAEE,iBAFW,SAIGC,MAAM,EAAKC,MAAMC,KAJpB,cAITC,EAJS,gBAKOA,EAAIC,OALX,OAKTC,EALS,OAMbC,QAAQC,IAAIJ,EAAIK,SACZA,EAAUL,EAAIK,QACdH,EAAQI,OACNC,EAAQL,EAAQI,MACpB,EAAKd,MAAMgB,QAAQD,EAAOL,EAASG,KAG/BE,EAAQE,OAAOC,KAAKR,GAASS,OACjC,EAAKnB,MAAMgB,QAAQD,EAAOL,EAASG,IAdxB,4CAZI,wDA+CnBO,gBAAkB,SAAAlB,GAChB,IAAMK,EAAML,EAAEmB,OAAOC,MACrB,EAAKC,SAAS,CAAEhB,SAjDC,EAoDnBiB,mBAAqB,SAAAtB,GACnB,IAAMuB,EAASvB,EAAEmB,OAAOK,GACxB,EAAKH,SAAS,CAAEE,YApDhB,EAAKnB,MAAQ,CACXC,IAAK,GACLkB,OAAQ,GACRX,MAAO,GACPJ,QAAS,GACTiB,QAAS,IAPM,E,qDA0DjB,OACE,oCACE,0BAAMC,SAAUC,KAAK5B,cACnB,+BACE,uCACA,2BAAO6B,KAAK,MAAMC,KAAK,OAAOC,SAAUH,KAAKT,kBAC7C,4BAAQW,KAAK,UAAb,QAEF,2BAAOE,UAAU,WACf,0BAAMA,UAAiC,QAAtBJ,KAAKvB,MAAMmB,OAAmB,SAAW,GAAIC,GAAG,MAAMQ,QAASL,KAAKL,oBAArF,OACA,0BAAMS,UAAiC,SAAtBJ,KAAKvB,MAAMmB,OAAoB,SAAW,GAAIC,GAAG,OAAOQ,QAASL,KAAKL,oBAAvF,QACA,0BAAMS,UAAiC,QAAtBJ,KAAKvB,MAAMmB,OAAmB,SAAW,GAAIC,GAAG,MAAMQ,QAASL,KAAKL,oBAArF,OACA,0BAAMS,UAAiC,WAAtBJ,KAAKvB,MAAMmB,OAAsB,SAAW,GAAIC,GAAG,SAASQ,QAASL,KAAKL,oBAA3F,YAGJ,6BAASS,UAAU,WACjB,0BAAMA,UAAU,UAAUJ,KAAKvB,MAAMqB,QAAQF,QAC7C,0BAAMQ,UAAU,OAAOJ,KAAKvB,MAAMqB,QAAQpB,W,GA7EjCX,IAAMC,YCkBVsC,MApBf,SAAiBnC,GAGb,OACI,6BACI,uCAAaA,EAAMe,OAEf,6BAAK,uCAAaqB,KAAKC,UAAUrC,EAAMa,QAAS,KAAM,KAItD,6BAAK,6BAAMuB,KAAKC,UAAUrC,EAAMU,QAAS,KAAM,OC+BhD4B,E,kDA7Bb,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IAQRuC,WAAa,SAACxB,EAAOL,EAASG,GAE5BF,QAAQC,IAAI,cAAeF,GAC3B,EAAKa,SAAS,CAAER,QAAOL,UAASG,aAVhC,EAAKP,MAAQ,CACXQ,MAAO,EACPJ,QAAS,GACTG,QAAS,IALM,E,qDAiBjB,OACE,kBAAC,IAAM2B,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAS9B,QAASmB,KAAKvB,MAAMI,QAASI,MAAOe,KAAKvB,MAAMQ,MAAOD,QAASgB,KAAKvB,MAAMO,UACnF,kBAAC,EAAD,CAAMG,QAASa,KAAKU,kB,GAxBV3C,IAAMC,WCTlB4C,E,uKAEF,OAAO,kBAAC,EAAD,U,GAFQ7C,IAAMC,WAMnB6C,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAAUJ,I","file":"static/js/main.90b1fde1.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>RESTy</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return <footer>&copy; 2018 Code Fellows</footer>;\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport '../form/form.scss';\n\nclass Form extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      method: '',\n      count: '',\n      results: '',\n      request: {},\n    };\n  }\n\n\n  handleSubmit = async (e) => {\n    //at some point\n    e.preventDefault();\n\n    let raw = await fetch(this.state.url); // star wars API\n    let results = await raw.json();\n    console.log(raw.headers);\n    let headers = raw.headers;\n    if (results.count) {\n      let Count = results.count;\n      this.props.handler(Count, results, headers);\n    }\n    else {\n      let Count = Object.keys(results).length;\n      this.props.handler(Count, results, headers);\n    }\n\n    // try {\n    //   const raw = await fetch(this.state.url);\n    //   const results = await raw.json();\n    //   let headers = raw.headers;\n\n    //   if (results.count) {\n    //     let Count = results.count;\n    //     this.props.handler(results, Count, headers);\n    //   }\n    //   else {\n    //     let Count = Object.keys(results).length;\n    //     this.props.handler(results, Count, headers);\n    //   }\n\n\n    // } \n  };\n\n  handleChangeURL = e => {\n    const url = e.target.value;\n    this.setState({ url });\n  };\n\n  handleChangeMethod = e => {\n    const method = e.target.id;\n    this.setState({ method });\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label >\n            <span>URL: </span>\n            <input name='url' type='text' onChange={this.handleChangeURL} />\n            <button type=\"submit\">GO!</button>\n          </label>\n          <label className=\"methods\">\n            <span className={this.state.method === 'get' ? 'active' : ''} id=\"get\" onClick={this.handleChangeMethod}>GET</span>\n            <span className={this.state.method === 'post' ? 'active' : ''} id=\"post\" onClick={this.handleChangeMethod}>POST</span>\n            <span className={this.state.method === 'put' ? 'active' : ''} id=\"put\" onClick={this.handleChangeMethod}>PUT</span>\n            <span className={this.state.method === 'delete' ? 'active' : ''} id=\"delete\" onClick={this.handleChangeMethod}>DELETE</span>\n          </label>\n        </form>\n        <section className=\"results\">\n          <span className=\"method\">{this.state.request.method}</span>\n          <span className=\"url\">{this.state.request.url}</span>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\n\nfunction Results(props) {\n\n\n    return (\n        <div>\n            <div>Count: {props.Count}</div>\n            {\n                <div><pre>Header:{JSON.stringify(props.headers, null, 2)}</pre></div>\n            }\n\n            {\n                <div><pre>{JSON.stringify(props.results, null, 2)}</pre></div>\n            }\n\n\n        </div>\n    );\n\n}\n\nexport default Results;","import React from 'react';\n\nimport './app.scss';\n\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form/form.js';\nimport Results from './components/results/results';\n\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      results: [],\n      headers: []\n\n    };\n  }\n  handleForm = (Count, results, headers) => {\n    // this will be called from the Form component on Submit\n    console.log('hi from app', results);\n    this.setState({ Count, results, headers });\n  };\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Footer />\n\n        <Results results={this.state.results} count={this.state.count} headers={this.state.headers} />\n        <Form handler={this.handleForm} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}